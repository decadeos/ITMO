6.5 Используемые функции
При написании программы для EV3 потребуется использовать некоторые классы и функции
библиотеки EV3 и встроенные элементы языка Python.
Для импорта библиотеки EV3 необходимо прописать в начале программы следующую строку
• from ev3dev.ev3 import *
Символ * в данном случае означает, что мы импортируем все элементы, находящиеся в
библиотеке EV3.
• import time
Подключает модуль time, предназначенный для работы со временем в Python.
26
• time.sleep(x)
Даёт возможность приостановить выполнение программы на определенное количество
секунд. Количество времени указывается вместо x.
• time.time()
Отображает Unix-время в секундах. Прим. Unix-время - время, моментом начала отсчёта
которого считается полночь (по UTC) с 31 декабря 1969 года на 1 января 1970.
• mA=LargeMotor(’port’)
Данный класс предназначен для работы с большим мотором Lego EV3.
Выходные порты указываются соответствующими заглавными буквами с префиксной
конструкцией out. Например, команда mA = LargeMotor(’outA’) позволит работать с
двигателем, включенным в порт A.
• f = open(’text.txt’, ’w’)
Функция open открывает файл, в который будет производиться запись данных, где
’text.txt’ - это название файла, а ’w’ это режим, при котором функция позволит создать
новый файл и записывать в него данные.
• f.write(’0’+’ ’+’0’+’\n’)
Запись в файл происходит с помощью метода write. Например, f.write(’Hello, world!’)
запишет в файл строку Hello, world!
• mA.run_direct(duty_cycle_sp=-100)
Метод run direct запускает мотор с процентом напряжения, указанным в duty_cycle_sp.
Знак отвечает за направление движения. Например, mA.run_direct(duty_cycle_sp=100)
запустит двигатель на полную мощность в направлении "вперед".
• mA.position
Позволяет узнать угол поворота двигателя в градусах.
• mA.speed
Позволяет узнать угловую скорость двигателя в градусах в секунду.
Пример программы на python3, которая вращает мотор на протяжении 5 секунд, записывает
угол поворота вала и время в файл data. В данном участке кода используется конструкция
try-finally, функции которой будут объяснены позднее. Во время выполнения работы
вы можете написать свою программу, в том числе более простую – использование
конструкции try-except-finally и цикла for совершенно необязательно.
27
Рис. 28. Пример программы
Строка №1 показывает, какой интерпретатор должен использоваться для запуска данной
программы. Данная строка должна присутствов
